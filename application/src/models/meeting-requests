import mongoose, {Schema, models} from "mongoose";

const meetingRequestsSchema = new Schema({
    // Owner of the requests
    userId: { type: mongoose.Schema.Types.ObjectId, ref: "User"},
    // Array of requests
    incomingMeetingRequests: [
        {
            // Meeting location ID
            senderUserId: {
                type: mongoose.Schema.Types.ObjectId,
                ref: "User", // Reference to the User model
            },
            meetingId:{
                type: mongoose.Schema.Types.ObjectId,
                ref: "Meeting", // Reference to the Meeting model
            },
            message: {
                type: String,
                default: "",
                maxLength: 500,
            },
            // Created at timestamp
            createdAt: {
                type: Date,
                default: Date.now,
            },
        },
    ],
    outgoingFriendRequests: [
        {
            // Meeting location ID
            recieverUserId: {
                type: mongoose.Schema.Types.ObjectId,
                ref: "User", // Reference to the User model
            },
            meetingId:{
                type: mongoose.Schema.Types.ObjectId,
                ref: "Meeting", // Reference to the Meeting model
            },
            message: {
                type: String,
                default: "",
                maxLength: 500,
            },
            // Created at timestamp
            createdAt: {
                type: Date,
                default: Date.now,
            },
        },
    ],
    createdAt: {
        type: Date,
        default: Date.now,
      },
      updatedAt: {
        type: Date,
        default: Date.now,
      },
});

const MeetingRequests = models.MeetingRequests || mongoose.model("MeetingRequests", meetingRequestsSchema);
export default MeetingRequests;
